import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,a as t}from"./app-1dd2e019.js";const o="/blog-v2/assets/1723098446072-16377ce9.png",p={},e=t('<h3 id="实现原理" tabindex="-1"><a class="header-anchor" href="#实现原理" aria-hidden="true">#</a> 实现原理</h3><p>监听scroll事件，当scrollTop+clientHeight &gt;= scrollHeight时，即已经滚动到列表底部，可以加载下一页数据。</p><figure><img src="'+o+`" alt="1723098446072" tabindex="0" loading="lazy"><figcaption>1723098446072</figcaption></figure><h3 id="响应式问题" tabindex="-1"><a class="header-anchor" href="#响应式问题" aria-hidden="true">#</a> 响应式问题</h3><p>当项目中使用rem或者vw来实现响应式布局时，不同屏幕下要小心px值转rem或者vw时的部分小数位丢失问题，因为这样会导致scrollHeight会一直比scrollTop + clientHeight的值小，无法触发下一页数据请求。目前我的解决办法为：在scrollTop + clientHeight的基础上加上一段距离，即不需要滚动底部时就触发数据加载，同时添加滚动防抖，防止多次触发滚动事件，重复请求。</p><h3 id="具体代码" tabindex="-1"><a class="header-anchor" href="#具体代码" aria-hidden="true">#</a> 具体代码</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>   <span class="token comment">// 初始化分页</span>
    <span class="token keyword">async</span> <span class="token function">initPage</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>scrollBody <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.list-scrollbar-wrap&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>scrollBody<span class="token operator">?.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> _<span class="token punctuation">.</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scrollHandle<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token comment">// this.scrollToTop()</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">async</span> <span class="token function">scrollHandle</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> scrollHeight <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scrollBody<span class="token punctuation">.</span>scrollHeight
      <span class="token keyword">const</span> scrollTop <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scrollBody<span class="token punctuation">.</span>scrollTop
      <span class="token keyword">const</span> clientHeight <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>scrollBody<span class="token punctuation">.</span>clientHeight
      <span class="token keyword">if</span> <span class="token punctuation">(</span>scrollTop <span class="token operator">+</span> clientHeight <span class="token operator">+</span> <span class="token number">20</span> <span class="token operator">&gt;=</span> scrollHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>finished <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),c=[e];function l(i,u){return s(),a("div",null,c)}const d=n(p,[["render",l],["__file","slide-to-load.html.vue"]]);export{d as default};
