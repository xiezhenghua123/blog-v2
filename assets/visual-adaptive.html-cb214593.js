const t=JSON.parse('{"key":"v-129e5b74","path":"/article/trap/visual-adaptive.html","title":"可视化大屏自适应的理解","lang":"zh-CN","frontmatter":{"author":"菜鸡小谢","date":"2023-07-22T00:00:00.000Z","category":"大屏可视化","title":"可视化大屏自适应的理解","isOriginal":true,"description":"前言 在工作中，我们或多或少会接触到大屏可视化的项目，对于大屏可视化的适配，是一大技术点。 可视化适配方案 通过市面上多种方案的对比，最常见也就三种方案，（vh、vw）方案、rem方案以及scale方案。接下来将分别介绍三种方案。 方案 原理 优点 缺点 vh、vw方案 配合postcss-px-to-viewport插件，将设计稿的px值自动转换为vw或者vh。 ①灵活性高，只需要将插件的viewportWidth属性配置成设计稿即可。②不会出现留白。 ①项目中使用echarts图标时，echarts图表中的px值需要根据屏幕宽度动态设置。所以需要手写一个计算比例的函数。②行内样式的px值需要自己手动转换。 rem方案 配合postcss-pxtorem插件，将设计稿的px值自动转换为rem，然后再根据屏幕宽度自动设置根html的font-size的大小。 ①将postcss-pxtorem的rootValue配置和设计稿一样的即可②不会出现留白 ①项目中使用echarts图标时，echarts图表中的px值需要根据屏幕宽度动态设置。所以需要手写一个计算比例的函数。②行内样式的px值需要自己手动转换。③需要手动写一个函数自动设置根html的font-size的值。 scale方案 根据屏幕宽度或者高度，动态设置scale的值 ①不用转换px值。②不用动态设置echarts中的px值。 ①当屏幕宽高比例与设计稿比例不一致时，两侧可能出现留白。","head":[["meta",{"property":"og:url","content":"https://xiezhenghua123.github.io/blog-v2/article/trap/visual-adaptive.html"}],["meta",{"property":"og:title","content":"可视化大屏自适应的理解"}],["meta",{"property":"og:description","content":"前言 在工作中，我们或多或少会接触到大屏可视化的项目，对于大屏可视化的适配，是一大技术点。 可视化适配方案 通过市面上多种方案的对比，最常见也就三种方案，（vh、vw）方案、rem方案以及scale方案。接下来将分别介绍三种方案。 方案 原理 优点 缺点 vh、vw方案 配合postcss-px-to-viewport插件，将设计稿的px值自动转换为vw或者vh。 ①灵活性高，只需要将插件的viewportWidth属性配置成设计稿即可。②不会出现留白。 ①项目中使用echarts图标时，echarts图表中的px值需要根据屏幕宽度动态设置。所以需要手写一个计算比例的函数。②行内样式的px值需要自己手动转换。 rem方案 配合postcss-pxtorem插件，将设计稿的px值自动转换为rem，然后再根据屏幕宽度自动设置根html的font-size的大小。 ①将postcss-pxtorem的rootValue配置和设计稿一样的即可②不会出现留白 ①项目中使用echarts图标时，echarts图表中的px值需要根据屏幕宽度动态设置。所以需要手写一个计算比例的函数。②行内样式的px值需要自己手动转换。③需要手动写一个函数自动设置根html的font-size的值。 scale方案 根据屏幕宽度或者高度，动态设置scale的值 ①不用转换px值。②不用动态设置echarts中的px值。 ①当屏幕宽高比例与设计稿比例不一致时，两侧可能出现留白。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-05T15:29:17.000Z"}],["meta",{"property":"article:author","content":"菜鸡小谢"}],["meta",{"property":"article:published_time","content":"2023-07-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-05T15:29:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"可视化大屏自适应的理解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-05T15:29:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"菜鸡小谢\\"}]}"],["meta",{"name":"google-site-verification","content":"8BRrT9I5fcaBjpw3Q8I49161FQtzGeN0qIYF54dqF0Y"}]]},"headers":[{"level":3,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":3,"title":"可视化适配方案","slug":"可视化适配方案","link":"#可视化适配方案","children":[]},{"level":3,"title":"相关代码","slug":"相关代码","link":"#相关代码","children":[]},{"level":3,"title":"注意点","slug":"注意点","link":"#注意点","children":[]}],"git":{"createdTime":1690180089000,"updatedTime":1693927757000,"contributors":[{"name":"xiezhenghua","email":"xiezhenghua@hikvision.com","commits":1},{"name":"谢正华“","email":"1803493121@qq.com","commits":1}]},"readingTime":{"minutes":2.62,"words":786},"filePathRelative":"article/trap/visual-adaptive.md","localizedDate":"2023年7月22日","excerpt":"<h3> 前言</h3>\\n<p>在工作中，我们或多或少会接触到大屏可视化的项目，对于大屏可视化的适配，是一大技术点。</p>\\n<h3> 可视化适配方案</h3>\\n<p>通过市面上多种方案的对比，最常见也就三种方案，（vh、vw）方案、rem方案以及scale方案。接下来将分别介绍三种方案。</p>\\n<table>\\n<thead>\\n<tr>\\n<th>方案</th>\\n<th>原理</th>\\n<th>优点</th>\\n<th>缺点</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>vh、vw方案</td>\\n<td>配合<a href=\\"https://www.npmjs.com/package/postcss-px-to-viewport\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">postcss-px-to-viewport</a>插件，将设计稿的px值自动转换为vw或者vh。</td>\\n<td>①灵活性高，只需要将插件的viewportWidth属性配置成设计稿即可。<br>②不会出现留白。<br></td>\\n<td>①项目中使用echarts图标时，echarts图表中的px值需要根据屏幕宽度动态设置。所以需要手写一个计算比例的函数。<br>②行内样式的px值需要自己手动转换。</td>\\n</tr>\\n<tr>\\n<td>rem方案</td>\\n<td>配合<a href=\\"https://www.npmjs.com/package/postcss-pxtorem\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">postcss-pxtorem</a>插件，将设计稿的px值自动转换为rem，然后再根据屏幕宽度自动设置根html的font-size的大小。</td>\\n<td>①将postcss-pxtorem的rootValue配置和设计稿一样的即可<br>②不会出现留白</td>\\n<td>①项目中使用echarts图标时，echarts图表中的px值需要根据屏幕宽度动态设置。所以需要手写一个计算比例的函数。<br>②行内样式的px值需要自己手动转换。<br>③需要手动写一个函数自动设置根html的font-size的值。</td>\\n</tr>\\n<tr>\\n<td>scale方案</td>\\n<td>根据屏幕宽度或者高度，动态设置scale的值</td>\\n<td>①不用转换px值。<br>②不用动态设置echarts中的px值。</td>\\n<td>①当屏幕宽高比例与设计稿比例不一致时，两侧可能出现留白。</td>\\n</tr>\\n</tbody>\\n</table>","copyright":{"author":"菜鸡小谢"},"autoDesc":true}');export{t as data};
