import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,a as t}from"./app-f97514fb.js";const p={},e=t(`<h3 id="问题描述" tabindex="-1"><a class="header-anchor" href="#问题描述" aria-hidden="true">#</a> <strong>问题描述</strong></h3><p>今天开发过程中遇到了一个关于 forEach 问题，在forEach中使用return无法中断forEach的循环。代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">handleMoney</span><span class="token punctuation">(</span><span class="token parameter">code<span class="token punctuation">,</span> monObjArr<span class="token punctuation">,</span> range</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>range<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token function">parseInt</span><span class="token punctuation">(</span>range<span class="token punctuation">.</span>min<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>range<span class="token punctuation">.</span>max<span class="token punctuation">)</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">let</span> arr
      monObjArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>code <span class="token operator">===</span> code<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          arr <span class="token operator">=</span> <span class="token punctuation">[</span>item<span class="token punctuation">.</span>min<span class="token punctuation">,</span> item<span class="token punctuation">.</span>max<span class="token punctuation">]</span>
          <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> arr
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面这段代码执行时，总是返回 undefind。</p><h3 id="解决办法" tabindex="-1"><a class="header-anchor" href="#解决办法" aria-hidden="true">#</a> <strong>解决办法</strong></h3><p>经过查找网上资料发现，forEach 方法使用 return 的作用是中断当前循环，不会中断forEach的循环，而且 使用 break 和 contuine 关键字也没用。如果要中断循环，做法只能是抛出错误或者使用其他数组方法。</p><p>正确代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">handleMoney</span><span class="token punctuation">(</span><span class="token parameter">code<span class="token punctuation">,</span> monObjArr<span class="token punctuation">,</span> range</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>range<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token function">parseInt</span><span class="token punctuation">(</span>range<span class="token punctuation">.</span>min<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>range<span class="token punctuation">.</span>max<span class="token punctuation">)</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> arr
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    monObjArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>code <span class="token operator">===</span> code<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       arr <span class="token operator">=</span> <span class="token punctuation">[</span>item<span class="token punctuation">.</span>min<span class="token punctuation">,</span> item<span class="token punctuation">.</span>max<span class="token punctuation">]</span>
        <span class="token keyword">throw</span> <span class="token string">&#39;error&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上函数实现最好的做法是使用find函数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">handleMoney</span><span class="token punctuation">(</span><span class="token parameter">code<span class="token punctuation">,</span> monObjArr<span class="token punctuation">,</span> range</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>range<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token function">parseInt</span><span class="token punctuation">(</span>range<span class="token punctuation">.</span>min<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>range<span class="token punctuation">.</span>max<span class="token punctuation">)</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> getMoneyArr <span class="token operator">=</span> monObjArr<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span>item<span class="token punctuation">.</span>code <span class="token operator">===</span> code<span class="token punctuation">)</span>
  <span class="token keyword">return</span> getMoneyArr <span class="token operator">?</span> <span class="token punctuation">[</span>item<span class="token punctuation">.</span>min<span class="token punctuation">,</span> item<span class="token punctuation">.</span>max<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token keyword">undefined</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),o=[e];function c(u,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","forEachBad.html.vue"]]);export{k as default};
