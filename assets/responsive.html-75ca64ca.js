const e=JSON.parse('{"key":"v-814b602c","path":"/article/vue/responsive.html","title":"vue响应式原理","lang":"zh-CN","frontmatter":{"author":"菜鸡小谢","date":"2021-07-13T00:00:00.000Z","category":"vue","title":"vue响应式原理","isOriginal":true,"description":"前言 看了好久的vue响应式原理，一直没看懂，直到我最近看到了实习公司的一位同事写的一篇分享文章，然后结合vue技术揭秘，终于对它有一点点的感悟了。 核心 Vue响应式的核心是利用Object.defineProperty()这个方法进行数据劫持和观察者模式进行数据响应式的。Object.defineProperty()这个方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。具体用法如下： 它有三个参数，第一个是object，它代表要定义属性的对象。；第二个是prop，它代表目标对象的属性值；第三个参数是descriptor，它代表要定义或修改的属性描述符。 响应式用法：","head":[["meta",{"property":"og:url","content":"https://xiezhenghua123.github.io/blog-v2/article/vue/responsive.html"}],["meta",{"property":"og:title","content":"vue响应式原理"}],["meta",{"property":"og:description","content":"前言 看了好久的vue响应式原理，一直没看懂，直到我最近看到了实习公司的一位同事写的一篇分享文章，然后结合vue技术揭秘，终于对它有一点点的感悟了。 核心 Vue响应式的核心是利用Object.defineProperty()这个方法进行数据劫持和观察者模式进行数据响应式的。Object.defineProperty()这个方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。具体用法如下： 它有三个参数，第一个是object，它代表要定义属性的对象。；第二个是prop，它代表目标对象的属性值；第三个参数是descriptor，它代表要定义或修改的属性描述符。 响应式用法："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-08T07:40:44.000Z"}],["meta",{"property":"article:author","content":"菜鸡小谢"}],["meta",{"property":"article:published_time","content":"2021-07-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-08T07:40:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue响应式原理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-07-13T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-08T07:40:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"菜鸡小谢\\"}]}"],["meta",{"name":"google-site-verification","content":"8BRrT9I5fcaBjpw3Q8I49161FQtzGeN0qIYF54dqF0Y"}]]},"headers":[{"level":3,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":3,"title":"核心","slug":"核心","link":"#核心","children":[]},{"level":3,"title":"观察者模式","slug":"观察者模式","link":"#观察者模式","children":[]},{"level":3,"title":"初始化","slug":"初始化","link":"#初始化","children":[]},{"level":3,"title":"mount阶段","slug":"mount阶段","link":"#mount阶段","children":[]},{"level":3,"title":"派发更新","slug":"派发更新","link":"#派发更新","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1690180089000,"updatedTime":1723102844000,"contributors":[{"name":"xiezhenghua","email":"xiezhenghua@sailvan.com","commits":2},{"name":"xiezhenghua","email":"xiezhenghua@hikvision.com","commits":1}]},"readingTime":{"minutes":5.21,"words":1563},"filePathRelative":"article/vue/responsive.md","localizedDate":"2021年7月13日","excerpt":"<h3> <strong>前言</strong></h3>\\n<p>看了好久的vue响应式原理，一直没看懂，直到我最近看到了实习公司的一位同事写的一篇分享文章，然后结合vue技术揭秘，终于对它有一点点的感悟了。</p>\\n<h3> <strong>核心</strong></h3>\\n<p>Vue响应式的核心是利用Object.defineProperty()这个方法进行数据劫持和观察者模式进行数据响应式的。Object.defineProperty()这个方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。具体用法如下：</p>\\n<pre><code>它有三个参数，第一个是object，它代表要定义属性的对象。；第二个是prop，它代表目标对象的属性值；第三个参数是descriptor，它代表要定义或修改的属性描述符。\\n\\n响应式用法：\\n</code></pre>","copyright":{"author":"菜鸡小谢"},"autoDesc":true}');export{e as data};
